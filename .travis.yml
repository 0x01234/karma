defaults_go: &DEFAULTS_GO
  language: go
  go: "1.11"
  cache:
    directories:
      - vendor

defaults_js: &DEFAULTS_JS
  language: node_js
  # FIXME 8.12 includes npm 6.4.1 which generates a different lock file on
  # macOS and Linux, causing diffs on CI and we fail builds when that happens
  node_js: "8.11.4" # FIXME same in the 'Build and Deploy' stage
  # install defaults to "npm install", which is done via make
  install: []
  cache:
    directories:
      - ui/node_modules

env:
  global:
    - secure: "TTJvEAPR9emq472XCxLE1KIAfAjeGQrYQskw/Y5Bgo+fyRcI1Jt0+3OerCwtuHpXJPEu2bb9XFmKpp1sByV9l8zUmDaPAE20yN62g2c3+CGAbtoXOdu+ZDwGwixzfH1zOv7Hpd9ICW/KiAXk1d279ch3aUQPSVOAgu63e33pXzxYOplLcEIZtV6ATIFhYYfTJLgMpIo6LH/RHZQlGAIEbvZSRmFfjb3EMB7oKRogSjHZ8+JPYizV7CozW9PrbY2M1iGouTnO7If4TQFmBNuurqJJXidKlrckzGUBpDnD2N/5uyneKdBge1Xl5WSHPYV6bW4gsZC/ecHAVm0Oy5I+rjn5vdDgLNXd8XF6zm90b+LjXiFp9M9y1YPygSqPuYGBllNkNMiDrR2Ho7sTVe8eID4+V7Ksw7g9bI+ehESovqK0STheOiD5KsxtkurvfnLO7yb+XpgZozDwQp0FuYfbZBKdqBOEI55aCOs+9FLaCZru6aKNCT7t0qG11TVTV8chMSlhcON9VI7/L7JXXenFHmp7cakxrs2N9TpJUkajmjgUY3Ia0l5LAcCNQFrFTxqx3i58X1R5bZGeYX7jniybPQf5ZkZay99AhPx5u56AHIFy7zp9ipHwHtSkP/yRPJdjGrR67qR6O+oVYCIalXSQFVGGWYO2R2K/IymZIcYwARk="

jobs:
  include:
    - stage: Test Go code
      <<: *DEFAULTS_GO
      before_script:
        - make mock-assets
      script: make test-go
      after_success:
        - bash <(curl -s https://codecov.io/bash) -F backend

    - stage: Test JavaScript code
      <<: *DEFAULTS_JS
      env:
        - NODE_ENV=test
      script: make test-js
      after_success:
        - bash <(curl -s https://codecov.io/bash) -F ui -s ui

    - stage: Lint Go code
      <<: *DEFAULTS_GO
      before_script:
        - make mock-assets
      script: make lint-go

    - stage: Lint JavaScript code
      <<: *DEFAULTS_JS
      script: make lint-js

    - stage: Lint docs
      <<: *DEFAULTS_JS
      script: make lint-docs

    - stage: Build Docker image
      language: generic
      sudo: true
      addons:
        apt:
          packages:
            - docker-ce
      script: make docker-image

    - stage: Build and Deploy
      <<: *DEFAULTS_GO
      cache:
        # disable cache so we always build from scratch
        directories: []
      before_script:
        # this stage needs to build everything including assets file and that
        # requires running webpack, so we need nodejs here
        - nvm install 8.11.4
      script:
        # compile assets via webpack and build those into bindata_assetfs.go file
        - make bindata_assetfs.go
        # verify that there are no uncommited changes from (re)compiling sass
        # assets
        - git diff --exit-code
        # install bakelite, we can't "go get" a tag from github, so we fetch the binary
        - export BAKELITE_VERSION="v0.1.0"
        - export BAKELITE_OS=$(go env GOHOSTOS)
        - export BAKELITE_ARCH="$(go env GOHOSTARCH)"
        - curl -L -o bakelite.tar.gz "https://github.com/terinjokes/bakelite/releases/download/${BAKELITE_VERSION}/bakelite-${BAKELITE_OS}-${BAKELITE_ARCH}.tar.gz"
        - tar -xf bakelite.tar.gz
        # and now compile using bakelite for all target archs
        - export SOURCE_DATE_EPOCH=$(git show -s --format=%ci ${TRAVIS_TAG:-${TRAVIS_COMMIT}}^{commit})
        - ./bakelite-${BAKELITE_OS}-${BAKELITE_ARCH} -platforms="-plan9" -ldflags="-X main.version=\"$(make show-version)\"" github.com/prymitive/karma
        - for i in karma-*; do tar --mtime="${SOURCE_DATE_EPOCH}" --owner=0 --group=0 --numeric-owner -c $i | gzip -n - > $i.tar.gz; done
        - shasum -a 512 karma-*.tar.gz | tee sha512sum.txt
      deploy:
        provider: releases
        api_key:
          secure: Wmix2qr1q6BakTWI4Wc6hQEw27OZMb04OeAfPhM84ZUMd30t9BNAdfERsNkuY2VylnJ9KhbBdHmd0XWqqAvI55/lZTLkUW1gD8ZEjly23w735HNm/9vHESjmUUZdZK/bLFLr1cQq3+jgGdO0ZNcAEGJhKZNA1TcdA7t0uNhg0xSejVYRMxOLx3wzVF9oGSq36m8nhLIWG9mlRkZBfE+0Q4pHJK+diqICoTUIZNhZO1Lu8uO6jNpAmgRfhF7q1LGcoa0ZeHV8OsB5OhpLXDExyNw4znxPzWBu5y9+85fjeRKpmGd0KFT2PRnwB9XkSo20Mmk94x+t07+0VR6NtyKXPG5g8i/PxLQr4f1ZwPXNW0xKq5t9KLycnj3Gf/xlaXyk4d5V64EKUTbDP37emodCwPyxaozoRfDvbT7Oyj1jtHoj+6ijYrPBpjc4fnz7xBoydD5R+we/dzcnM/1ZlFnpGckWsCL7QyNuGQQJ9vk2Xo3H5wylL1Ol2BB/aWZYAuBbwXaXZnOg79b/2SQkxHrEveAbDlVovSvqsOtq6DI6oY4VyWsQzjQHvmFMfTp1LPWwh/EL1q2+feDM4vEsx9OMLegFCoAzKPy9xm0teZbYKdMfJammBjvRYZh9h+Hw43/atXktG3zSuR4C/HmXLoswq+c2bjJWlcM8jvB29oo5uA4=
        skip_cleanup: true
        file_glob: true
        file:
          - karma-*.tar.gz
          - sha512sum.txt
        on:
          repo: prymitive/karma
          tags: true

    # for the master branch we build and deploy a container for heroku app
    # at http://karma-demo.herokuapp.com
    - stage: Deploy demo app to Heroku
      if: type != pull_request AND branch = master AND repo = prymitive/karma
      env:
        # HEROKU_TOKEN, valid forever, needed to push docker image and release
        # it on heroku app
        - secure: "zr1fHhSIZQgA7wT8PALNyAhilCZBpvziL2zuC7LJvYy9PSHatV1B+/Tl5Ao1MGlqiD9wHdRXhw/Z7Ol7vR84LlEXIQv/PZvpYtdGrwP/dmwEzRi59puNHW/sDa5fU27U5bgGW9VPYKzQFGBIknRz9yEpGAsDqzWSRwEQofgnuF1Cv0JJXN/tcZs/fcXz4AhFSXRb8Rde2geHRVGlz3UnuECQ9LnzTI/xxIP/+YORvMpTcwJtQwq/NhucYXzms19XM94xz5IE/cwf8yV9YZalm867aR2yQJvkMmOaufSYoFgRrghqnpzEe1wyuZvAXkwwZErw5swBY3Zo1YkGUeU761g3v+Nh+dlVKFaBVYgDt9W9bb1QsK1Lbgix4UYSx8Tz06X83xz2f6hWXS1Yvju7yE7M1VmjAhevWW+ZpTf3vwOH2UeUHyAMOddggMSIRfaxC9W74Trt8zxKlM+8sQiaEE3c6Ea+ZJxq1baDJvHQPdfuj2844uKaAL7qNVuRNRPAa0bp0qkzLyl3f5P3XK54mM4vayBRCQ+qflq+XGXY5G8+LukUNnKMq/KuPZZ1A6pOr3kTj4qKaxAcxOJQq4/xc+zJaiQFkzfMj1//LKMyvrRtqMnPV+P3qtgMGzA4Z3JlHUOgPHgbZ9WTlpV5yi066Onro+j2NFehjY+FV6R2gOI="
      language: generic
      sudo: true
      addons:
        apt:
          packages:
            - docker-ce
      before_script:
        # a safe and boring version of cat > .netrc < EOF
        - echo "machine api.heroku.com" >> $HOME/.netrc
        - echo "  login l.mierzwa@gmail.com" >> $HOME/.netrc
        - echo "  password $HEROKU_TOKEN" >> $HOME/.netrc
      script:
        - docker build --build-arg VERSION=$(make show-version) -t registry.heroku.com/karma-demo/web -f demo/Dockerfile .
        - docker login -u _ -p "$HEROKU_TOKEN" registry.heroku.com
        - docker push registry.heroku.com/karma-demo/web
        # bundled heroku cli doesn't know anything about containers, update it
        - curl https://cli-assets.heroku.com/install.sh | sh
        - heroku container:release web --app karma-demo
